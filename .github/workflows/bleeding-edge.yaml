name: CI (bleeding edge)
# this workflow is heavily inspired from pandas, see
# https://github.com/pandas-dev/pandas/blob/master/.github/workflows/python-dev.yml

# goal: check stability against dev versions of Python, numpy, and matplotlib

on:
  push:
    branches:
    - main
  pull_request:
    paths:
    - .github/workflows/bleeding-edge.yaml
  schedule:
  # run this every Wednesday at 3 am UTC
  - cron: 0 3 * * 3
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest

    runs-on: ${{ matrix.os }}
    name: Test nightly dependencies
    timeout-minutes: 60

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0

    - uses: astral-sh/setup-uv@bd01e18f51369d5a26f1651c3cb451d3417e3bba # v6.3.1
      with:
        python-version: '3.14'
        enable-cache: false

    - name: Configure uv
      run: |
        echo "UV_PRERELEASE=allow" >> $GITHUB_ENV
        echo "UV_INDEX=https://pypi.anaconda.org/scientific-python-nightly-wheels/simple" >> $GITHUB_ENV
        echo "UV_INDEX_STRATEGY=unsafe-best-match" >> $GITHUB_ENV


    - run: |
        uv lock --upgrade --no-build
        # this additional step is needed as long as our requires-python
        # (currently >=3.10) is lower than numpy's (currently >=3.11) or matplotlib's (currently >=3.11)
        uv lock -P numpy -P matplotlib
        # forcing bytecode compilation for colorspacious
        # see https://github.com/astral-sh/uv/issues/4758
        uv sync --no-editable --group test --compile-bytecode

    - name: Run test suite
      run: |
        uv run --no-sync pytest --color yes --mpl-results-path=test_results

    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: failure()
      with:
        name: test_results
        path: test_results/
