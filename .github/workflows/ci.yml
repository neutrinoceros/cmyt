name: CI
on:
  pull_request:
    paths-ignore:
    - '**/*.md'
  push:
    branches:
    - main
  schedule:
  # run this every Wednesday at 3 am UTC
  - cron: 0 3 * * 3
  workflow_dispatch:

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        python-version:
        - '3.9'
        - '3.10'
        - '3.11'
        - '3.12'
        include:
          # only test oldest and most recent Python on other platforms
        - os: macos-latest
          python-version: '3.9'
        - os: macos-latest
          python-version: '3.12'
        - os: windows-latest
          python-version: '3.9'
          venv-loc: Script
        - os: windows-latest
          python-version: '3.12'
          venv-loc: Script
        - os: ubuntu-20.04
          python-version: '3.9'
          # 2022-03-27 is setuptool 61.2's release date
          install-args: --resolution=lowest-direct --exclude-newer '2022-03-27'

    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout Source
      uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: |
          **/requirements/tests.txt
          **/pyproject.toml

    # forcing bytecode compilation for colorspacious
    # see https://github.com/astral-sh/uv/issues/4758
    - run: |
        uv venv --python ${{ matrix.python-version }}
        uv pip install --compile -r requirements/tests.txt ${{ matrix.install-args }}

    - name: Build library
      run: uv pip install . ${{ matrix.install-args }}

    - run: uv pip list

    - name: Run test suite (UNIX)
      if: matrix.os != 'windows-latest'
      run: |
        source .venv/bin/activate
        pytest --color yes -ra
    - name: Run test suite (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        .venv/Scripts/activate
        pytest --color yes -ra
    - uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test_results
        path: test_results/

  image-tests:
    name: Image tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.x
    - uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: |
          **/requirements/tests.txt
          **/pyproject.toml

    - name: Build library
      # forcing bytecode compilation for colorspacious
      # see https://github.com/astral-sh/uv/issues/4758
      run: |
        uv venv
        uv pip install .
        uv pip install --compile -r requirements/tests.txt

    - name: Run Image Tests
      run: |
        source .venv/bin/activate
        pytest --color=yes --mpl -m mpl_image_compare \
               --mpl-generate-summary=html \
               --mpl-results-path=pytest_mpl_results \
               --mpl-baseline-path=tests/baseline

    - name: Generate new image baseline
      if: failure()
      run: |
        source .venv/bin/activate
        pytest --color=yes --mpl -m mpl_image_compare \
               --mpl-generate-path=pytest_mpl_new_baseline \
               --last-failed

    # always attempt to upload artifacts, even
    # (and especially) in case of failure.
    - name: Upload pytest-mpl report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: cmyt_pytest_mpl_results
        path: pytest_mpl_results/*

    - name: Upload pytest-mpl baseline
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: cmyt_pytest_mpl_new_baseline
        path: pytest_mpl_new_baseline/*
        if-no-files-found: ignore

  type-check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
        # oldest and newest supported versions
        - '3.9'
        - '3.12'
    concurrency:
      # auto-cancel any in-progress job *on the same branch*
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.python-version }}-typecheck
      cancel-in-progress: true

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: |
          **/requirements/typecheck.txt
          **/pyproject.toml
    - name: Run mypy
      run: |
        uvx --python ${{ matrix.python-version }} \
          --with-requirements=requirements/typecheck.txt --with . \
          mypy cmyt
